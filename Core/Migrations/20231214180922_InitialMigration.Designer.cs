// <auto-generated />
using Core.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231214180922_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Data.Entities.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityCalendar", b =>
                {
                    b.Property<int>("UCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UCId"), 1L, 1);

                    b.Property<string>("EventDeadline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventNotification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UId")
                        .HasColumnType("int");

                    b.HasKey("UCId");

                    b.HasIndex("UId");

                    b.ToTable("UniversityCalendar");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityDepartments", b =>
                {
                    b.Property<int>("UDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UDId"), 1L, 1);

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UId")
                        .HasColumnType("int");

                    b.HasKey("UDId");

                    b.HasIndex("UId");

                    b.ToTable("UniversityDepartment");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityDocuments", b =>
                {
                    b.Property<int>("UDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UDocId"), 1L, 1);

                    b.Property<string>("DocumentRequirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UId")
                        .HasColumnType("int");

                    b.HasKey("UDocId");

                    b.HasIndex("UId");

                    b.ToTable("UniversityDocument");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityFee", b =>
                {
                    b.Property<int>("UFId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UFId"), 1L, 1);

                    b.Property<string>("AdmissionFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerCreditHourFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UId")
                        .HasColumnType("int");

                    b.HasKey("UFId");

                    b.HasIndex("UId");

                    b.ToTable("UniversityFee");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityCalendar", b =>
                {
                    b.HasOne("Core.Data.Entities.University", "University")
                        .WithMany("UniversityCalendars")
                        .HasForeignKey("UId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityDepartments", b =>
                {
                    b.HasOne("Core.Data.Entities.University", "University")
                        .WithMany("UniversityDepartments")
                        .HasForeignKey("UId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityDocuments", b =>
                {
                    b.HasOne("Core.Data.Entities.University", "University")
                        .WithMany("UniversityDocuments")
                        .HasForeignKey("UId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Core.Data.Entities.UniversityFee", b =>
                {
                    b.HasOne("Core.Data.Entities.University", "University")
                        .WithMany("UniversityFees")
                        .HasForeignKey("UId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Core.Data.Entities.University", b =>
                {
                    b.Navigation("UniversityCalendars");

                    b.Navigation("UniversityDepartments");

                    b.Navigation("UniversityDocuments");

                    b.Navigation("UniversityFees");
                });
#pragma warning restore 612, 618
        }
    }
}
